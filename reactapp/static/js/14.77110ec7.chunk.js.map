{"version":3,"sources":["images/svg/sms.svg","images/login.png","views/ForgotPassword.js"],"names":["module","exports","__webpack_require__","p","ForgetPassword","_useState","useState","_useState2","Object","E_Python_MallorcaMagc_clean_for_deploy_mallorcamagic_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","email","setEmail","_useState3","_useState4","emailValid","setEmailValid","_useState5","_useState6","loading","setLoading","_useState7","_useState8","error","setError","handleSubmit","useCallback","url","concat","HOST_NAME","axios","post","then","resp","status","catch","err","response","data","finally","useEffect","isValidEMail","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","className","_containers_DefaultLayout__WEBPACK_IMPORTED_MODULE_6__","coverImage","Wellcome","coverText","_components_Title__WEBPACK_IMPORTED_MODULE_4__","text","style","textAlign","react_inlinesvg__WEBPACK_IMPORTED_MODULE_3__","src","Email","type","placeholder","value","onChange","e","target","onClick","disabled"],"mappings":"8EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,qDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,gMCqEzBC,UA3DQ,WAAM,IAAAC,EACCC,mBAAS,IADVC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAClBK,EADkBH,EAAA,GACXI,EADWJ,EAAA,GAAAK,EAEWN,oBAAS,GAFpBO,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAElBE,EAFkBD,EAAA,GAENE,EAFMF,EAAA,GAAAG,EAGKV,oBAAS,GAHdW,EAAAT,OAAAC,EAAA,EAAAD,CAAAQ,EAAA,GAGlBE,EAHkBD,EAAA,GAGTE,EAHSF,EAAA,GAAAG,EAICd,mBAAS,IAJVe,EAAAb,OAAAC,EAAA,EAAAD,CAAAY,EAAA,GAIlBE,EAJkBD,EAAA,GAIXE,EAJWF,EAAA,GAMnBG,EAAeC,sBAAY,WAC7BN,GAAW,GACXI,EAAS,IACT,IAAMG,EAAG,GAAAC,OAAMC,IAAN,gCAETC,IAAMC,KAAKJ,EAAK,CAAEhB,UACbqB,KAAK,SAAAC,GACkB,MAAhBA,EAAKC,QACLV,EAAS,mDACTZ,EAAS,KAETY,EAAS,8CAGhBW,MAAM,SAAAC,GAAG,OAAIZ,EAASY,EAAIC,SAASC,KAAK3B,SACxC4B,QAAQ,kBAAMnB,GAAW,MAC/B,CAACT,IAMJ,OAJA6B,oBAAU,WACNxB,EAAcyB,YAAa9B,KAC5B,CAACA,IAGA+B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACXH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAeC,WAAYC,IAAUC,UAAU,6BAC3CP,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACXH,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAOC,KAAK,wBAEX5B,GAASmB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SAAStB,GAClCmB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACXH,EAAAC,EAAAC,cAAA,KAAGQ,MAAO,CAAEC,UAAW,WAAvB,iHAGAX,EAAAC,EAAAC,cAAA,KAAGQ,MAAO,CAAEC,UAAW,WAAvB,yHAGAX,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACXH,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAMC,IAAKC,MACXd,EAAAC,EAAAC,cAAA,SAAOa,KAAK,OAAOC,YAAY,0BAA0BC,MAAOhD,EAAOiD,SAAU,SAACC,GAAD,OAAOjD,EAASiD,EAAEC,OAAOH,WAG9GjB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACXH,EAAAC,EAAAC,cAAA,UAAQmB,QAAStC,EAAcoB,UAAW1B,EAAU,uBAAyB,eAAgB6C,SAAU7C,IAAYJ,GAAnH","file":"static/js/14.77110ec7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/sms.2c09bd0e.svg\";","module.exports = __webpack_public_path__ + \"static/media/login.a9ced1f7.png\";","import axios from 'axios';\r\nimport React, { useCallback, useEffect, useState } from 'react';\r\nimport Isvg from 'react-inlinesvg';\r\nimport { Title } from '../components/Title';\r\nimport { HOST_NAME } from '../config';\r\nimport { DefaultLayout } from '../containers/DefaultLayout';\r\nimport Wellcome from '../images/login.png';\r\nimport Email from '../images/svg/sms.svg';\r\nimport { isValidEMail } from '../utils/helpers';\r\n\r\nconst ForgetPassword = () => {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [emailValid, setEmailValid] = useState(false);\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(\"\");\r\n\r\n    const handleSubmit = useCallback(() => {\r\n        setLoading(true);\r\n        setError(\"\");\r\n        const url = `${HOST_NAME}api/accounts/password_reset/`;\r\n\r\n        axios.post(url, { email })\r\n            .then(resp => {\r\n                if (resp.status === 200) {\r\n                    setError('Please check your email to reset your password.');\r\n                    setEmail(\"\");\r\n                } else {\r\n                    setError(\"Unknown error. Please try agauint later.\");\r\n                }\r\n            })\r\n            .catch(err => setError(err.response.data.email))\r\n            .finally(() => setLoading(false));\r\n    }, [email]);\r\n\r\n    useEffect(() => {\r\n        setEmailValid(isValidEMail(email));\r\n    }, [email]);\r\n\r\n    return (\r\n        <div className=\"login-screen-wrapper\">\r\n            <DefaultLayout coverImage={Wellcome} coverText=\"Welcome to Mallorca Magic\">\r\n                <div className=\"login-wrapper\">\r\n                    <div>\r\n                        <Title text=\"Reset your password\" />\r\n\r\n                        {error && <div className=\"error\">{error}</div>}\r\n                        <div className=\"login\">\r\n                            <p style={{ textAlign: \"center\" }}>Enter the email address you used when you joined and weâ€™ll send you\r\n                                instructions to reset your password.</p>\r\n\r\n                            <p style={{ textAlign: \"center\" }}>\r\n                                For security reasons, we do NOT store your password. So rest assured\r\n                                that we will never send your password via email.</p>\r\n                            <label>Email</label>\r\n                            <div className=\"input\">\r\n                                <Isvg src={Email} />\r\n                                <input type=\"text\" placeholder=\"Type your Email address\" value={email} onChange={(e) => setEmail(e.target.value)} />\r\n                            </div>\r\n\r\n                            <div className=\"buttons\">\r\n                                <button onClick={handleSubmit} className={loading ? 'loading reset-button' : 'reset-button'} disabled={loading || !emailValid}>Send reset instructiion</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </DefaultLayout>\r\n        </div>\r\n    )\r\n}\r\nexport default ForgetPassword;"],"sourceRoot":""}